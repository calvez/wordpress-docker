version: '3'

services:
  wp:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    ports:
      - ${PORT}:80
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wordpress:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    depends_on:
      - db
    links:
      - db  

  wpcli:
    image: wordpress:cli
    volumes_from:
      - wp
    links:
      - db:mysql
    entrypoint: wp
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    depends_on:
      - db
      - wp

  adminer:
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - db      

  db:
    image: mariadb
    environment:
      MARIADB_DATABASE: "${DB_NAME}"
      MARIADB_USER: "${DB_USER}"
      MARIADB_PASSWORD: "${DB_ROOT_PASSWORD}"
      MARIADB_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    volumes:
      # Initialize DB with SQL scripts
      - ./data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    healthcheck:
      # Should return true only after SQL has been loaded
      test: /opt/bitnami/scripts/mariadb/healthcheck.sh && ps ax | grep setup.sh

volumes:
  db_data:
